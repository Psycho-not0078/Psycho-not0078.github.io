name: CI

on:
  pull_request_target:
    types:
      - opened
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  build:
    name: Code standards & build
    runs-on: ubuntu-latest
    timeout-minutes: 3

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: "‚òÅÔ∏è Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: "üîß Setup Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: "üì¶ Install dependencies"
        run: npm ci
      
      - name: Get changed files
        id: changed-files
        run: |
            timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            git fetch origin $GITHUB_BASE_REF
            Addeddiff=$(git diff --name-status --diff-filter=A origin/$GITHUB_BASE_REF..HEAD | awk '{print $2}')
            Updateddiff=$(git diff --name-status --diff-filter=M origin/$GITHUB_BASE_REF..HEAD | awk '{print $2}')
            echo "::debug::Added Files - $Addeddiff"
            for updated_file in $Updateddiff; do
                if [[ "$file" == *.md || "$file" == *.markdown ]]; then
                  ./update_timestamp.sh "$timestamp" $updated_file update
                fi
            done
            echo "::debug::Updated Files - $Updateddiff"
            for added_files in $Addeddiff; do
                if [[ "$file" == *.md || "$file" == *.markdown ]]; then
                  ./update_timestamp.sh "$timestamp" $added_files create
                fi
            done


      - name: "üîé Lint code"
        if: steps.changed-files.outcome == 'success'
        run: npm run lint

      - name: "üöÄ Build the project"
        run: npm run build
        
      - name: "Upload Pages Artifact"
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./dist/"

  Deploy:
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
